#pragma once
#define SOLUTION_CPP_FOLDER_NAME_ID_1 	two-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_2 	add-two-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_3 	longest-substring-without-repeating-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_4 	median-of-two-sorted-arrays
#define SOLUTION_CPP_FOLDER_NAME_ID_5 	longest-palindromic-substring
#define SOLUTION_CPP_FOLDER_NAME_ID_6 	zigzag-conversion
#define SOLUTION_CPP_FOLDER_NAME_ID_7 	reverse-integer
#define SOLUTION_CPP_FOLDER_NAME_ID_8 	string-to-integer-atoi
#define SOLUTION_CPP_FOLDER_NAME_ID_9 	palindrome-number
#define SOLUTION_CPP_FOLDER_NAME_ID_10 	regular-expression-matching
#define SOLUTION_CPP_FOLDER_NAME_ID_11 	container-with-most-water
#define SOLUTION_CPP_FOLDER_NAME_ID_12 	integer-to-roman
#define SOLUTION_CPP_FOLDER_NAME_ID_13 	roman-to-integer
#define SOLUTION_CPP_FOLDER_NAME_ID_14 	longest-common-prefix
#define SOLUTION_CPP_FOLDER_NAME_ID_15 	3sum
#define SOLUTION_CPP_FOLDER_NAME_ID_16 	3sum-closest
#define SOLUTION_CPP_FOLDER_NAME_ID_17 	letter-combinations-of-a-phone-number
#define SOLUTION_CPP_FOLDER_NAME_ID_18 	4sum
#define SOLUTION_CPP_FOLDER_NAME_ID_19 	remove-nth-node-from-end-of-list
#define SOLUTION_CPP_FOLDER_NAME_ID_20 	valid-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_21 	merge-two-sorted-lists
#define SOLUTION_CPP_FOLDER_NAME_ID_22 	generate-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_23 	merge-k-sorted-lists
#define SOLUTION_CPP_FOLDER_NAME_ID_24 	swap-nodes-in-pairs
#define SOLUTION_CPP_FOLDER_NAME_ID_25 	reverse-nodes-in-k-group
#define SOLUTION_CPP_FOLDER_NAME_ID_26 	remove-duplicates-from-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_27 	remove-element
#define SOLUTION_CPP_FOLDER_NAME_ID_28 	implement-strstr
#define SOLUTION_CPP_FOLDER_NAME_ID_29 	divide-two-integers
#define SOLUTION_CPP_FOLDER_NAME_ID_30 	substring-with-concatenation-of-all-words
#define SOLUTION_CPP_FOLDER_NAME_ID_31 	next-permutation
#define SOLUTION_CPP_FOLDER_NAME_ID_32 	longest-valid-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_33 	search-in-rotated-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_34 	find-first-and-last-position-of-element-in-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_35 	search-insert-position
#define SOLUTION_CPP_FOLDER_NAME_ID_36 	valid-sudoku
#define SOLUTION_CPP_FOLDER_NAME_ID_37 	sudoku-solver
#define SOLUTION_CPP_FOLDER_NAME_ID_38 	count-and-say
#define SOLUTION_CPP_FOLDER_NAME_ID_39 	combination-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_40 	combination-sum-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_41 	first-missing-positive
#define SOLUTION_CPP_FOLDER_NAME_ID_42 	trapping-rain-water
#define SOLUTION_CPP_FOLDER_NAME_ID_43 	multiply-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_44 	wildcard-matching
#define SOLUTION_CPP_FOLDER_NAME_ID_45 	jump-game-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_46 	permutations
#define SOLUTION_CPP_FOLDER_NAME_ID_47 	permutations-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_48 	rotate-image
#define SOLUTION_CPP_FOLDER_NAME_ID_49 	group-anagrams
#define SOLUTION_CPP_FOLDER_NAME_ID_50 	powx-n
#define SOLUTION_CPP_FOLDER_NAME_ID_51 	n-queens
#define SOLUTION_CPP_FOLDER_NAME_ID_52 	n-queens-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_53 	maximum-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_54 	spiral-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_55 	jump-game
#define SOLUTION_CPP_FOLDER_NAME_ID_56 	merge-intervals
#define SOLUTION_CPP_FOLDER_NAME_ID_57 	insert-interval
#define SOLUTION_CPP_FOLDER_NAME_ID_58 	length-of-last-word
#define SOLUTION_CPP_FOLDER_NAME_ID_59 	spiral-matrix-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_60 	permutation-sequence
#define SOLUTION_CPP_FOLDER_NAME_ID_61 	rotate-list
#define SOLUTION_CPP_FOLDER_NAME_ID_62 	unique-paths
#define SOLUTION_CPP_FOLDER_NAME_ID_63 	unique-paths-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_64 	minimum-path-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_66 	plus-one
#define SOLUTION_CPP_FOLDER_NAME_ID_67 	add-binary
#define SOLUTION_CPP_FOLDER_NAME_ID_68 	text-justification
#define SOLUTION_CPP_FOLDER_NAME_ID_69 	sqrtx
#define SOLUTION_CPP_FOLDER_NAME_ID_70 	climbing-stairs
#define SOLUTION_CPP_FOLDER_NAME_ID_71 	simplify-path
#define SOLUTION_CPP_FOLDER_NAME_ID_72 	edit-distance
#define SOLUTION_CPP_FOLDER_NAME_ID_73 	set-matrix-zeroes
#define SOLUTION_CPP_FOLDER_NAME_ID_74 	search-a-2d-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_75 	sort-colors
#define SOLUTION_CPP_FOLDER_NAME_ID_76 	minimum-window-substring
#define SOLUTION_CPP_FOLDER_NAME_ID_77 	combinations
#define SOLUTION_CPP_FOLDER_NAME_ID_78 	subsets
#define SOLUTION_CPP_FOLDER_NAME_ID_79 	word-search
#define SOLUTION_CPP_FOLDER_NAME_ID_80 	remove-duplicates-from-sorted-array-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_81 	search-in-rotated-sorted-array-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_82 	remove-duplicates-from-sorted-list-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_83 	remove-duplicates-from-sorted-list
#define SOLUTION_CPP_FOLDER_NAME_ID_84 	largest-rectangle-in-histogram
#define SOLUTION_CPP_FOLDER_NAME_ID_86 	partition-list
#define SOLUTION_CPP_FOLDER_NAME_ID_88 	merge-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_89 	gray-code
#define SOLUTION_CPP_FOLDER_NAME_ID_92 	reverse-linked-list-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_93 	restore-ip-addresses
#define SOLUTION_CPP_FOLDER_NAME_ID_94 	binary-tree-inorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_95 	unique-binary-search-trees-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_96 	unique-binary-search-trees
#define SOLUTION_CPP_FOLDER_NAME_ID_98 	validate-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_99 	recover-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_100 	same-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_101 	symmetric-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_102 	binary-tree-level-order-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_103 	binary-tree-zigzag-level-order-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_104 	maximum-depth-of-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_105 	construct-binary-tree-from-preorder-and-inorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_106 	construct-binary-tree-from-inorder-and-postorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_107 	binary-tree-level-order-traversal-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_108 	convert-sorted-array-to-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_109 	convert-sorted-list-to-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_110 	balanced-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_111 	minimum-depth-of-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_112 	path-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_113 	path-sum-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_114 	flatten-binary-tree-to-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_116 	populating-next-right-pointers-in-each-node
#define SOLUTION_CPP_FOLDER_NAME_ID_117 	populating-next-right-pointers-in-each-node-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_118 	pascals-triangle
#define SOLUTION_CPP_FOLDER_NAME_ID_119 	pascals-triangle-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_120 	triangle
#define SOLUTION_CPP_FOLDER_NAME_ID_121 	best-time-to-buy-and-sell-stock
#define SOLUTION_CPP_FOLDER_NAME_ID_122 	best-time-to-buy-and-sell-stock-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_123 	best-time-to-buy-and-sell-stock-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_124 	binary-tree-maximum-path-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_125 	valid-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_127 	word-ladder
#define SOLUTION_CPP_FOLDER_NAME_ID_128 	longest-consecutive-sequence
#define SOLUTION_CPP_FOLDER_NAME_ID_129 	sum-root-to-leaf-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_130 	surrounded-regions
#define SOLUTION_CPP_FOLDER_NAME_ID_131 	palindrome-partitioning
#define SOLUTION_CPP_FOLDER_NAME_ID_133 	clone-graph
#define SOLUTION_CPP_FOLDER_NAME_ID_134 	gas-station
#define SOLUTION_CPP_FOLDER_NAME_ID_136 	single-number
#define SOLUTION_CPP_FOLDER_NAME_ID_137 	single-number-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_138 	copy-list-with-random-pointer
#define SOLUTION_CPP_FOLDER_NAME_ID_139 	word-break
#define SOLUTION_CPP_FOLDER_NAME_ID_140 	word-break-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_141 	linked-list-cycle
#define SOLUTION_CPP_FOLDER_NAME_ID_142 	linked-list-cycle-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_143 	reorder-list
#define SOLUTION_CPP_FOLDER_NAME_ID_144 	binary-tree-preorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_145 	binary-tree-postorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_146 	lru-cache
#define SOLUTION_CPP_FOLDER_NAME_ID_147 	insertion-sort-list
#define SOLUTION_CPP_FOLDER_NAME_ID_148 	sort-list
#define SOLUTION_CPP_FOLDER_NAME_ID_149 	max-points-on-a-line
#define SOLUTION_CPP_FOLDER_NAME_ID_150 	evaluate-reverse-polish-notation
#define SOLUTION_CPP_FOLDER_NAME_ID_151 	reverse-words-in-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_152 	maximum-product-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_153 	find-minimum-in-rotated-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_154 	find-minimum-in-rotated-sorted-array-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_155 	min-stack
#define SOLUTION_CPP_FOLDER_NAME_ID_160 	intersection-of-two-linked-lists
#define SOLUTION_CPP_FOLDER_NAME_ID_162 	find-peak-element
#define SOLUTION_CPP_FOLDER_NAME_ID_166 	fraction-to-recurring-decimal
#define SOLUTION_CPP_FOLDER_NAME_ID_167 	two-sum-ii-input-array-is-sorted
#define SOLUTION_CPP_FOLDER_NAME_ID_168 	excel-sheet-column-title
#define SOLUTION_CPP_FOLDER_NAME_ID_169 	majority-element
#define SOLUTION_CPP_FOLDER_NAME_ID_171 	excel-sheet-column-number
#define SOLUTION_CPP_FOLDER_NAME_ID_172 	factorial-trailing-zeroes
#define SOLUTION_CPP_FOLDER_NAME_ID_173 	binary-search-tree-iterator
#define SOLUTION_CPP_FOLDER_NAME_ID_174 	dungeon-game
#define SOLUTION_CPP_FOLDER_NAME_ID_179 	largest-number
#define SOLUTION_CPP_FOLDER_NAME_ID_188 	best-time-to-buy-and-sell-stock-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_189 	rotate-array
#define SOLUTION_CPP_FOLDER_NAME_ID_189 	rotate-array
#define SOLUTION_CPP_FOLDER_NAME_ID_190 	reverse-bits
#define SOLUTION_CPP_FOLDER_NAME_ID_191 	number-of-1-bits
#define SOLUTION_CPP_FOLDER_NAME_ID_198 	house-robber
#define SOLUTION_CPP_FOLDER_NAME_ID_199 	binary-tree-right-side-view
#define SOLUTION_CPP_FOLDER_NAME_ID_200 	number-of-islands
#define SOLUTION_CPP_FOLDER_NAME_ID_201 	bitwise-and-of-numbers-range
#define SOLUTION_CPP_FOLDER_NAME_ID_202 	happy-number
#define SOLUTION_CPP_FOLDER_NAME_ID_203 	remove-linked-list-elements
#define SOLUTION_CPP_FOLDER_NAME_ID_204 	count-primes
#define SOLUTION_CPP_FOLDER_NAME_ID_205 	isomorphic-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_206 	reverse-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_207 	course-schedule
#define SOLUTION_CPP_FOLDER_NAME_ID_208 	implement-trie-prefix-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_209 	minimum-size-subarray-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_210 	course-schedule-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_212 	word-search-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_213 	house-robber-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_215 	kth-largest-element-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_216 	combination-sum-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_217 	contains-duplicate
#define SOLUTION_CPP_FOLDER_NAME_ID_218 	the-skyline-problem
#define SOLUTION_CPP_FOLDER_NAME_ID_219 	contains-duplicate-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_220 	contains-duplicate-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_221 	maximal-square
#define SOLUTION_CPP_FOLDER_NAME_ID_222 	count-complete-tree-nodes
#define SOLUTION_CPP_FOLDER_NAME_ID_225 	implement-stack-using-queues
#define SOLUTION_CPP_FOLDER_NAME_ID_226 	invert-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_227 	basic-calculator-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_230 	kth-smallest-element-in-a-bst
#define SOLUTION_CPP_FOLDER_NAME_ID_231 	power-of-two
#define SOLUTION_CPP_FOLDER_NAME_ID_232 	implement-queue-using-stacks
#define SOLUTION_CPP_FOLDER_NAME_ID_234 	palindrome-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_235 	lowest-common-ancestor-of-a-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_236 	lowest-common-ancestor-of-a-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_237 	delete-node-in-a-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_238 	product-of-array-except-self
#define SOLUTION_CPP_FOLDER_NAME_ID_239 	sliding-window-maximum
#define SOLUTION_CPP_FOLDER_NAME_ID_240 	search-a-2d-matrix-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_242 	valid-anagram
#define SOLUTION_CPP_FOLDER_NAME_ID_249 	group-shifted-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_257 	binary-tree-paths
#define SOLUTION_CPP_FOLDER_NAME_ID_258 	add-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_263 	ugly-number
#define SOLUTION_CPP_FOLDER_NAME_ID_268 	missing-number
#define SOLUTION_CPP_FOLDER_NAME_ID_278 	first-bad-version
#define SOLUTION_CPP_FOLDER_NAME_ID_279 	perfect-squares
#define SOLUTION_CPP_FOLDER_NAME_ID_283 	move-zeroes
#define SOLUTION_CPP_FOLDER_NAME_ID_286 	walls-and-gates
#define SOLUTION_CPP_FOLDER_NAME_ID_287 	find-the-duplicate-number
#define SOLUTION_CPP_FOLDER_NAME_ID_289 	game-of-life
#define SOLUTION_CPP_FOLDER_NAME_ID_290 	word-pattern
#define SOLUTION_CPP_FOLDER_NAME_ID_292 	nim-game
#define SOLUTION_CPP_FOLDER_NAME_ID_295 	find-median-from-data-stream
#define SOLUTION_CPP_FOLDER_NAME_ID_297 	serialize-and-deserialize-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_299 	bulls-and-cows
#define SOLUTION_CPP_FOLDER_NAME_ID_300 	longest-increasing-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_301 	remove-invalid-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_303 	range-sum-query-immutable
#define SOLUTION_CPP_FOLDER_NAME_ID_304 	range-sum-query-2d-immutable
#define SOLUTION_CPP_FOLDER_NAME_ID_309 	best-time-to-buy-and-sell-stock-with-cooldown
#define SOLUTION_CPP_FOLDER_NAME_ID_312 	burst-balloons
#define SOLUTION_CPP_FOLDER_NAME_ID_315 	count-of-smaller-numbers-after-self
#define SOLUTION_CPP_FOLDER_NAME_ID_322 	coin-change
#define SOLUTION_CPP_FOLDER_NAME_ID_324 	wiggle-sort-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_326 	power-of-three
#define SOLUTION_CPP_FOLDER_NAME_ID_328 	odd-even-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_329 	longest-increasing-path-in-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_332 	reconstruct-itinerary
#define SOLUTION_CPP_FOLDER_NAME_ID_334 	increasing-triplet-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_336 	palindrome-pairs
#define SOLUTION_CPP_FOLDER_NAME_ID_337 	house-robber-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_338 	counting-bits
#define SOLUTION_CPP_FOLDER_NAME_ID_341 	flatten-nested-list-iterator
#define SOLUTION_CPP_FOLDER_NAME_ID_343 	integer-break
#define SOLUTION_CPP_FOLDER_NAME_ID_344 	reverse-string
#define SOLUTION_CPP_FOLDER_NAME_ID_345 	reverse-vowels-of-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_347 	top-k-frequent-elements
#define SOLUTION_CPP_FOLDER_NAME_ID_349 	intersection-of-two-arrays
#define SOLUTION_CPP_FOLDER_NAME_ID_350 	intersection-of-two-arrays-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_354 	russian-doll-envelopes
#define SOLUTION_CPP_FOLDER_NAME_ID_355 	design-twitter
#define SOLUTION_CPP_FOLDER_NAME_ID_365 	water-and-jug-problem
#define SOLUTION_CPP_FOLDER_NAME_ID_367 	valid-perfect-square
#define SOLUTION_CPP_FOLDER_NAME_ID_371 	sum-of-two-integers
#define SOLUTION_CPP_FOLDER_NAME_ID_374 	guess-number-higher-or-lower
#define SOLUTION_CPP_FOLDER_NAME_ID_375 	guess-number-higher-or-lower-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_377 	combination-sum-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_378 	kth-smallest-element-in-a-sorted-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_380 	insert-delete-getrandom-o1
#define SOLUTION_CPP_FOLDER_NAME_ID_381 	insert-delete-getrandom-o1-duplicates-allowed
#define SOLUTION_CPP_FOLDER_NAME_ID_383 	ransom-note
#define SOLUTION_CPP_FOLDER_NAME_ID_384 	shuffle-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_387 	first-unique-character-in-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_389 	find-the-difference
#define SOLUTION_CPP_FOLDER_NAME_ID_390 	elimination-game
#define SOLUTION_CPP_FOLDER_NAME_ID_392 	is-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_393 	utf-8-validation
#define SOLUTION_CPP_FOLDER_NAME_ID_394 	decode-string
#define SOLUTION_CPP_FOLDER_NAME_ID_395 	longest-substring-with-at-least-k-repeating-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_399 	evaluate-division
#define SOLUTION_CPP_FOLDER_NAME_ID_401 	binary-watch
#define SOLUTION_CPP_FOLDER_NAME_ID_404 	sum-of-left-leaves
#define SOLUTION_CPP_FOLDER_NAME_ID_406 	queue-reconstruction-by-height
#define SOLUTION_CPP_FOLDER_NAME_ID_409 	longest-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_410 	split-array-largest-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_412 	fizz-buzz
#define SOLUTION_CPP_FOLDER_NAME_ID_414 	third-maximum-number
#define SOLUTION_CPP_FOLDER_NAME_ID_415 	add-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_416 	partition-equal-subset-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_429 	n-ary-tree-level-order-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_430 	flatten-a-multilevel-doubly-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_432 	all-oone-data-structure
#define SOLUTION_CPP_FOLDER_NAME_ID_437 	path-sum-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_441 	arranging-coins
#define SOLUTION_CPP_FOLDER_NAME_ID_443 	string-compression
#define SOLUTION_CPP_FOLDER_NAME_ID_445 	add-two-numbers-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_447 	number-of-boomerangs
#define SOLUTION_CPP_FOLDER_NAME_ID_453 	minimum-moves-to-equal-array-elements
#define SOLUTION_CPP_FOLDER_NAME_ID_459 	repeated-substring-pattern
#define SOLUTION_CPP_FOLDER_NAME_ID_460 	lfu-cache
#define SOLUTION_CPP_FOLDER_NAME_ID_466 	count-the-repetitions
#define SOLUTION_CPP_FOLDER_NAME_ID_473 	matchsticks-to-square
#define SOLUTION_CPP_FOLDER_NAME_ID_475 	heaters
#define SOLUTION_CPP_FOLDER_NAME_ID_481 	magical-string
#define SOLUTION_CPP_FOLDER_NAME_ID_486 	predict-the-winner
#define SOLUTION_CPP_FOLDER_NAME_ID_488 	zuma-game
#define SOLUTION_CPP_FOLDER_NAME_ID_450 	delete-node-in-a-bst
#define SOLUTION_CPP_FOLDER_NAME_ID_451 	sort-characters-by-frequency
#define SOLUTION_CPP_FOLDER_NAME_ID_454 	4sum-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_455 	assign-cookies
#define SOLUTION_CPP_FOLDER_NAME_ID_457 	circular-array-loop
#define SOLUTION_CPP_FOLDER_NAME_ID_461 	hamming-distance
#define SOLUTION_CPP_FOLDER_NAME_ID_463 	island-perimeter
#define SOLUTION_CPP_FOLDER_NAME_ID_485 	max-consecutive-ones
#define SOLUTION_CPP_FOLDER_NAME_ID_491 	increasing-subsequences
#define SOLUTION_CPP_FOLDER_NAME_ID_494 	target-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_495 	teemo-attacking
#define SOLUTION_CPP_FOLDER_NAME_ID_496 	next-greater-element-i
#define SOLUTION_CPP_FOLDER_NAME_ID_498 	diagonal-traverse
#define SOLUTION_CPP_FOLDER_NAME_ID_501 	find-mode-in-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_503 	next-greater-element-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_504 	base-7
#define SOLUTION_CPP_FOLDER_NAME_ID_509 	fibonacci-number
#define SOLUTION_CPP_FOLDER_NAME_ID_514 	freedom-trail
#define SOLUTION_CPP_FOLDER_NAME_ID_516 	longest-palindromic-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_520 	detect-capital
#define SOLUTION_CPP_FOLDER_NAME_ID_521 	longest-uncommon-subsequence-i
#define SOLUTION_CPP_FOLDER_NAME_ID_529 	minesweeper
#define SOLUTION_CPP_FOLDER_NAME_ID_530 	minimum-absolute-difference-in-bst
#define SOLUTION_CPP_FOLDER_NAME_ID_538 	convert-bst-to-greater-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_541 	reverse-string-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_541 	reverse-string-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_542 	01-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_543 	diameter-of-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_547 	friend-circles
#define SOLUTION_CPP_FOLDER_NAME_ID_551 	student-attendance-record-i
#define SOLUTION_CPP_FOLDER_NAME_ID_556 	next-greater-element-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_557 	reverse-words-in-a-string-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_559 	maximum-depth-of-n-ary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_561 	array-partition-i
#define SOLUTION_CPP_FOLDER_NAME_ID_563 	binary-tree-tilt
#define SOLUTION_CPP_FOLDER_NAME_ID_567 	permutation-in-string
#define SOLUTION_CPP_FOLDER_NAME_ID_572 	subtree-of-another-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_575 	distribute-candies
#define SOLUTION_CPP_FOLDER_NAME_ID_581 	shortest-unsorted-continuous-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_589 	n-ary-tree-preorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_590 	n-ary-tree-postorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_594 	longest-harmonious-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_599 	minimum-index-sum-of-two-lists
#define SOLUTION_CPP_FOLDER_NAME_ID_605 	can-place-flowers
#define SOLUTION_CPP_FOLDER_NAME_ID_617 	merge-two-binary-trees
#define SOLUTION_CPP_FOLDER_NAME_ID_621 	task-scheduler
#define SOLUTION_CPP_FOLDER_NAME_ID_622 	design-circular-queue
#define SOLUTION_CPP_FOLDER_NAME_ID_637 	average-of-levels-in-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_641 	design-circular-deque
#define SOLUTION_CPP_FOLDER_NAME_ID_647 	palindromic-substrings
#define SOLUTION_CPP_FOLDER_NAME_ID_648 	replace-words
#define SOLUTION_CPP_FOLDER_NAME_ID_652 	find-duplicate-subtrees
#define SOLUTION_CPP_FOLDER_NAME_ID_657 	robot-return-to-origin
#define SOLUTION_CPP_FOLDER_NAME_ID_658 	find-k-closest-elements
#define SOLUTION_CPP_FOLDER_NAME_ID_665 	non-decreasing-array
#define SOLUTION_CPP_FOLDER_NAME_ID_670 	maximum-swap
#define SOLUTION_CPP_FOLDER_NAME_ID_674 	longest-continuous-increasing-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_677 	map-sum-pairs
#define SOLUTION_CPP_FOLDER_NAME_ID_680 	valid-palindrome-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_684 	redundant-connection
#define SOLUTION_CPP_FOLDER_NAME_ID_687 	longest-univalue-path
#define SOLUTION_CPP_FOLDER_NAME_ID_690 	employee-importance
#define SOLUTION_CPP_FOLDER_NAME_ID_693 	binary-number-with-alternating-bits
#define SOLUTION_CPP_FOLDER_NAME_ID_695 	max-area-of-island
#define SOLUTION_CPP_FOLDER_NAME_ID_696 	count-binary-substrings
#define SOLUTION_CPP_FOLDER_NAME_ID_698 	partition-to-k-equal-sum-subsets
#define SOLUTION_CPP_FOLDER_NAME_ID_700 	search-in-a-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_701 	insert-into-a-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_703 	kth-largest-element-in-a-stream
#define SOLUTION_CPP_FOLDER_NAME_ID_704 	binary-search
#define SOLUTION_CPP_FOLDER_NAME_ID_705 	design-hashset
#define SOLUTION_CPP_FOLDER_NAME_ID_706 	design-hashmap
#define SOLUTION_CPP_FOLDER_NAME_ID_707 	design-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_714 	best-time-to-buy-and-sell-stock-with-transaction-fee
#define SOLUTION_CPP_FOLDER_NAME_ID_718 	maximum-length-of-repeated-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_719 	find-k-th-smallest-pair-distance
#define SOLUTION_CPP_FOLDER_NAME_ID_724 	find-pivot-index
#define SOLUTION_CPP_FOLDER_NAME_ID_733 	flood-fill
#define SOLUTION_CPP_FOLDER_NAME_ID_739 	daily-temperatures
#define SOLUTION_CPP_FOLDER_NAME_ID_744 	find-smallest-letter-greater-than-target
#define SOLUTION_CPP_FOLDER_NAME_ID_746 	min-cost-climbing-stairs
#define SOLUTION_CPP_FOLDER_NAME_ID_747 	largest-number-at-least-twice-of-others
#define SOLUTION_CPP_FOLDER_NAME_ID_748 	shortest-completing-word
#define SOLUTION_CPP_FOLDER_NAME_ID_752 	open-the-lock
#define SOLUTION_CPP_FOLDER_NAME_ID_763 	partition-labels
#define SOLUTION_CPP_FOLDER_NAME_ID_771 	jewels-and-stones
#define SOLUTION_CPP_FOLDER_NAME_ID_779 	k-th-symbol-in-grammar
#define SOLUTION_CPP_FOLDER_NAME_ID_783 	minimum-distance-between-bst-nodes
#define SOLUTION_CPP_FOLDER_NAME_ID_788 	rotated-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_819 	most-common-word
#define SOLUTION_CPP_FOLDER_NAME_ID_820 	short-encoding-of-words
#define SOLUTION_CPP_FOLDER_NAME_ID_836 	rectangle-overlap
#define SOLUTION_CPP_FOLDER_NAME_ID_841 	keys-and-rooms
#define SOLUTION_CPP_FOLDER_NAME_ID_844 	backspace-string-compare
#define SOLUTION_CPP_FOLDER_NAME_ID_845 	longest-mountain-in-array
#define SOLUTION_CPP_FOLDER_NAME_ID_852 	peak-index-in-a-mountain-array
#define SOLUTION_CPP_FOLDER_NAME_ID_868 	binary-gap
#define SOLUTION_CPP_FOLDER_NAME_ID_874 	walking-robot-simulation
#define SOLUTION_CPP_FOLDER_NAME_ID_876 	middle-of-the-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_887 	super-egg-drop
#define SOLUTION_CPP_FOLDER_NAME_ID_888 	fair-candy-swap
#define SOLUTION_CPP_FOLDER_NAME_ID_892 	surface-area-of-3d-shapes
#define SOLUTION_CPP_FOLDER_NAME_ID_905 	sort-array-by-parity
#define SOLUTION_CPP_FOLDER_NAME_ID_912 	sort-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_914 	x-of-a-kind-in-a-deck-of-cards
#define SOLUTION_CPP_FOLDER_NAME_ID_918 	maximum-sum-circular-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_922 	sort-array-by-parity-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_925 	long-pressed-name
#define SOLUTION_CPP_FOLDER_NAME_ID_933 	number-of-recent-calls
#define SOLUTION_CPP_FOLDER_NAME_ID_945 	minimum-increment-to-make-array-unique
#define SOLUTION_CPP_FOLDER_NAME_ID_946 	validate-stack-sequences
#define SOLUTION_CPP_FOLDER_NAME_ID_949 	largest-time-for-given-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_953 	verifying-an-alien-dictionary
#define SOLUTION_CPP_FOLDER_NAME_ID_956 	tallest-billboard
#define SOLUTION_CPP_FOLDER_NAME_ID_968 	binary-tree-cameras
#define SOLUTION_CPP_FOLDER_NAME_ID_973 	k-closest-points-to-origin
#define SOLUTION_CPP_FOLDER_NAME_ID_974 	subarray-sums-divisible-by-k
#define SOLUTION_CPP_FOLDER_NAME_ID_977 	squares-of-a-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_990 	satisfiability-of-equality-equations
#define SOLUTION_CPP_FOLDER_NAME_ID_994 	rotting-oranges
#define SOLUTION_CPP_FOLDER_NAME_ID_999 	available-captures-for-rook
#define SOLUTION_CPP_FOLDER_NAME_ID_1002 	find-common-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1013 	partition-array-into-three-parts-with-equal-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1014 	best-sightseeing-pair
#define SOLUTION_CPP_FOLDER_NAME_ID_1018 	binary-prefix-divisible-by-5
#define SOLUTION_CPP_FOLDER_NAME_ID_1024 	video-stitching
#define SOLUTION_CPP_FOLDER_NAME_ID_1025 	divisor-game
#define SOLUTION_CPP_FOLDER_NAME_ID_1028 	recover-a-tree-from-preorder-traversal
#define SOLUTION_CPP_FOLDER_NAME_ID_1037 	valid-boomerang
#define SOLUTION_CPP_FOLDER_NAME_ID_1038 	binary-search-tree-to-greater-sum-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1071 	greatest-common-divisor-of-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_1095 	find-in-mountain-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1103 	distribute-candies-to-people
#define SOLUTION_CPP_FOLDER_NAME_ID_1109 	corporate-flight-bookings
#define SOLUTION_CPP_FOLDER_NAME_ID_1111 	maximum-nesting-depth-of-two-valid-parentheses-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_1143 	longest-common-subsequence
#define SOLUTION_CPP_FOLDER_NAME_ID_1146 	snapshot-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1160 	find-words-that-can-be-formed-by-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1162 	as-far-from-land-as-possible
#define SOLUTION_CPP_FOLDER_NAME_ID_1171 	remove-zero-sum-consecutive-nodes-from-linked-list
#define SOLUTION_CPP_FOLDER_NAME_ID_1207 	unique-number-of-occurrences
#define SOLUTION_CPP_FOLDER_NAME_ID_1208 	get-equal-substrings-within-budget
#define SOLUTION_CPP_FOLDER_NAME_ID_1209 	remove-all-adjacent-duplicates-in-string-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1210 	minimum-moves-to-reach-target-with-rotations
#define SOLUTION_CPP_FOLDER_NAME_ID_1217 	play-with-chips
#define SOLUTION_CPP_FOLDER_NAME_ID_1218 	longest-arithmetic-subsequence-of-given-difference
#define SOLUTION_CPP_FOLDER_NAME_ID_1219 	path-with-maximum-gold
#define SOLUTION_CPP_FOLDER_NAME_ID_1220 	count-vowels-permutation
#define SOLUTION_CPP_FOLDER_NAME_ID_1221 	split-a-string-in-balanced-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_1222 	queens-that-can-attack-the-king
#define SOLUTION_CPP_FOLDER_NAME_ID_1223 	dice-roll-simulation
#define SOLUTION_CPP_FOLDER_NAME_ID_1224 	maximum-equal-frequency
#define SOLUTION_CPP_FOLDER_NAME_ID_1228 	missing-number-in-arithmetic-progression
#define SOLUTION_CPP_FOLDER_NAME_ID_1229 	meeting-scheduler
#define SOLUTION_CPP_FOLDER_NAME_ID_1230 	toss-strange-coins
#define SOLUTION_CPP_FOLDER_NAME_ID_1231 	divide-chocolate
#define SOLUTION_CPP_FOLDER_NAME_ID_1232 	check-if-it-is-a-straight-line
#define SOLUTION_CPP_FOLDER_NAME_ID_1233 	remove-sub-folders-from-the-filesystem
#define SOLUTION_CPP_FOLDER_NAME_ID_1234 	replace-the-substring-for-balanced-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1235 	maximum-profit-in-job-scheduling
#define SOLUTION_CPP_FOLDER_NAME_ID_1243 	array-transformation
#define SOLUTION_CPP_FOLDER_NAME_ID_1244 	design-a-leaderboard
#define SOLUTION_CPP_FOLDER_NAME_ID_1245 	tree-diameter
#define SOLUTION_CPP_FOLDER_NAME_ID_1246 	palindrome-removal
#define SOLUTION_CPP_FOLDER_NAME_ID_1237 	find-positive-integer-solution-for-a-given-equation
#define SOLUTION_CPP_FOLDER_NAME_ID_1238 	circular-permutation-in-binary-representation
#define SOLUTION_CPP_FOLDER_NAME_ID_1239 	maximum-length-of-a-concatenated-string-with-unique-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1240 	tiling-a-rectangle-with-the-fewest-squares
#define SOLUTION_CPP_FOLDER_NAME_ID_1247 	minimum-swaps-to-make-strings-equal
#define SOLUTION_CPP_FOLDER_NAME_ID_1248 	count-number-of-nice-subarrays
#define SOLUTION_CPP_FOLDER_NAME_ID_1249 	minimum-remove-to-make-valid-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_1250 	check-if-it-is-a-good-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1252 	cells-with-odd-values-in-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1253 	reconstruct-a-2-row-binary-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1254 	number-of-closed-islands
#define SOLUTION_CPP_FOLDER_NAME_ID_1255 	maximum-score-words-formed-by-letters
#define SOLUTION_CPP_FOLDER_NAME_ID_1256 	encode-number
#define SOLUTION_CPP_FOLDER_NAME_ID_1257 	smallest-common-region
#define SOLUTION_CPP_FOLDER_NAME_ID_1258 	synonymous-sentences
#define SOLUTION_CPP_FOLDER_NAME_ID_1259 	handshakes-that-dont-cross
#define SOLUTION_CPP_FOLDER_NAME_ID_1260 	shift-2d-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1261 	find-elements-in-a-contaminated-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1262 	greatest-sum-divisible-by-three
#define SOLUTION_CPP_FOLDER_NAME_ID_1263 	minimum-moves-to-move-a-box-to-their-target-location
#define SOLUTION_CPP_FOLDER_NAME_ID_1266 	minimum-time-visiting-all-points
#define SOLUTION_CPP_FOLDER_NAME_ID_1267 	count-servers-that-communicate
#define SOLUTION_CPP_FOLDER_NAME_ID_1268 	search-suggestions-system
#define SOLUTION_CPP_FOLDER_NAME_ID_1269 	number-of-ways-to-stay-in-the-same-place-after-some-steps
#define SOLUTION_CPP_FOLDER_NAME_ID_1271 	hexspeak
#define SOLUTION_CPP_FOLDER_NAME_ID_1272 	remove-interval
#define SOLUTION_CPP_FOLDER_NAME_ID_1273 	delete-tree-nodes
#define SOLUTION_CPP_FOLDER_NAME_ID_1274 	number-of-ships-in-a-rectangle
#define SOLUTION_CPP_FOLDER_NAME_ID_1275 	find-winner-on-a-tic-tac-toe-game
#define SOLUTION_CPP_FOLDER_NAME_ID_1276 	number-of-burgers-with-no-waste-of-ingredients
#define SOLUTION_CPP_FOLDER_NAME_ID_1277 	count-square-submatrices-with-all-ones
#define SOLUTION_CPP_FOLDER_NAME_ID_1278 	palindrome-partitioning-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_1281 	subtract-the-product-and-sum-of-digits-of-an-integer
#define SOLUTION_CPP_FOLDER_NAME_ID_1282 	group-the-people-given-the-group-size-they-belong-to
#define SOLUTION_CPP_FOLDER_NAME_ID_1283 	find-the-smallest-divisor-given-a-threshold
#define SOLUTION_CPP_FOLDER_NAME_ID_1284 	minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1286 	iterator-for-combination
#define SOLUTION_CPP_FOLDER_NAME_ID_1287 	element-appearing-more-than-25-in-sorted-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1288 	remove-covered-intervals
#define SOLUTION_CPP_FOLDER_NAME_ID_1289 	minimum-falling-path-sum-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1290 	convert-binary-number-in-a-linked-list-to-integer
#define SOLUTION_CPP_FOLDER_NAME_ID_1291 	sequential-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_1292 	maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold
#define SOLUTION_CPP_FOLDER_NAME_ID_1293 	shortest-path-in-a-grid-with-obstacles-elimination
#define SOLUTION_CPP_FOLDER_NAME_ID_1295 	find-numbers-with-even-number-of-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_1296 	divide-array-in-sets-of-k-consecutive-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_1297 	maximum-number-of-occurrences-of-a-substring
#define SOLUTION_CPP_FOLDER_NAME_ID_1298 	maximum-candies-you-can-get-from-boxes
#define SOLUTION_CPP_FOLDER_NAME_ID_1299 	replace-elements-with-greatest-element-on-right-side
#define SOLUTION_CPP_FOLDER_NAME_ID_1300 	sum-of-mutated-array-closest-to-target
#define SOLUTION_CPP_FOLDER_NAME_ID_1301 	number-of-paths-with-max-score
#define SOLUTION_CPP_FOLDER_NAME_ID_1302 	deepest-leaves-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1304 	find-n-unique-integers-sum-up-to-zero
#define SOLUTION_CPP_FOLDER_NAME_ID_1305 	all-elements-in-two-binary-search-trees
#define SOLUTION_CPP_FOLDER_NAME_ID_1306 	jump-game-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_1307 	verbal-arithmetic-puzzle
#define SOLUTION_CPP_FOLDER_NAME_ID_1309 	decrypt-string-from-alphabet-to-integer-mapping
#define SOLUTION_CPP_FOLDER_NAME_ID_1310 	xor-queries-of-a-subarray
#define SOLUTION_CPP_FOLDER_NAME_ID_1311 	get-watched-videos-by-your-friends
#define SOLUTION_CPP_FOLDER_NAME_ID_1312 	minimum-insertion-steps-to-make-a-string-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_1313 	decompress-run-length-encoded-list
#define SOLUTION_CPP_FOLDER_NAME_ID_1314 	matrix-block-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1315 	sum-of-nodes-with-even-valued-grandparent
#define SOLUTION_CPP_FOLDER_NAME_ID_1316 	distinct-echo-substrings
#define SOLUTION_CPP_FOLDER_NAME_ID_1317 	convert-integer-to-the-sum-of-two-no-zero-integers
#define SOLUTION_CPP_FOLDER_NAME_ID_1318 	minimum-flips-to-make-a-or-b-equal-to-c
#define SOLUTION_CPP_FOLDER_NAME_ID_1319 	number-of-operations-to-make-network-connected
#define SOLUTION_CPP_FOLDER_NAME_ID_1320 	minimum-distance-to-type-a-word-using-two-fingers
#define SOLUTION_CPP_FOLDER_NAME_ID_1323 	maximum-69-number
#define SOLUTION_CPP_FOLDER_NAME_ID_1324 	print-words-vertically
#define SOLUTION_CPP_FOLDER_NAME_ID_1325 	delete-leaves-with-a-given-value
#define SOLUTION_CPP_FOLDER_NAME_ID_1326 	minimum-number-of-taps-to-open-to-water-a-garden
#define SOLUTION_CPP_FOLDER_NAME_ID_1328 	break-a-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_1329 	sort-the-matrix-diagonally
#define SOLUTION_CPP_FOLDER_NAME_ID_1330 	reverse-subarray-to-maximize-array-value
#define SOLUTION_CPP_FOLDER_NAME_ID_1331 	rank-transform-of-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1332 	remove-palindromic-subsequences
#define SOLUTION_CPP_FOLDER_NAME_ID_1333 	filter-restaurants-by-vegan-friendly-price-and-distance
#define SOLUTION_CPP_FOLDER_NAME_ID_1334 	find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance
#define SOLUTION_CPP_FOLDER_NAME_ID_1335 	minimum-difficulty-of-a-job-schedule
#define SOLUTION_CPP_FOLDER_NAME_ID_1337 	the-k-weakest-rows-in-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1338 	reduce-array-size-to-the-half
#define SOLUTION_CPP_FOLDER_NAME_ID_1339 	maximum-product-of-splitted-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1340 	jump-game-v
#define SOLUTION_CPP_FOLDER_NAME_ID_1342 	number-of-steps-to-reduce-a-number-to-zero
#define SOLUTION_CPP_FOLDER_NAME_ID_1343 	number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold
#define SOLUTION_CPP_FOLDER_NAME_ID_1344 	angle-between-hands-of-a-clock
#define SOLUTION_CPP_FOLDER_NAME_ID_1345 	jump-game-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_1346 	check-if-n-and-its-double-exist
#define SOLUTION_CPP_FOLDER_NAME_ID_1347 	minimum-number-of-steps-to-make-two-strings-anagram
#define SOLUTION_CPP_FOLDER_NAME_ID_1348 	tweet-counts-per-frequency
#define SOLUTION_CPP_FOLDER_NAME_ID_1349 	maximum-students-taking-exam
#define SOLUTION_CPP_FOLDER_NAME_ID_1351 	count-negative-numbers-in-a-sorted-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1352 	product-of-the-last-k-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_1353 	maximum-number-of-events-that-can-be-attended
#define SOLUTION_CPP_FOLDER_NAME_ID_1354 	construct-target-array-with-multiple-sums
#define SOLUTION_CPP_FOLDER_NAME_ID_1356 	sort-integers-by-the-number-of-1-bits
#define SOLUTION_CPP_FOLDER_NAME_ID_1357 	apply-discount-every-n-orders
#define SOLUTION_CPP_FOLDER_NAME_ID_1358 	number-of-substrings-containing-all-three-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1359 	count-all-valid-pickup-and-delivery-options
#define SOLUTION_CPP_FOLDER_NAME_ID_1360 	number-of-days-between-two-dates
#define SOLUTION_CPP_FOLDER_NAME_ID_1361 	validate-binary-tree-nodes
#define SOLUTION_CPP_FOLDER_NAME_ID_1362 	closest-divisors
#define SOLUTION_CPP_FOLDER_NAME_ID_1363 	largest-multiple-of-three
#define SOLUTION_CPP_FOLDER_NAME_ID_1390 	four-divisors
#define SOLUTION_CPP_FOLDER_NAME_ID_1382 	balance-a-binary-search-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1370 	increasing-decreasing-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1371 	find-the-longest-substring-containing-vowels-in-even-counts
#define SOLUTION_CPP_FOLDER_NAME_ID_1372 	longest-zigzag-path-in-a-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1373 	maximum-sum-bst-in-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1365 	how-many-numbers-are-smaller-than-the-current-number
#define SOLUTION_CPP_FOLDER_NAME_ID_1366 	rank-teams-by-votes
#define SOLUTION_CPP_FOLDER_NAME_ID_1367 	linked-list-in-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1368 	minimum-cost-to-make-at-least-one-valid-path-in-a-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1385 	find-the-distance-value-between-two-arrays
#define SOLUTION_CPP_FOLDER_NAME_ID_1386 	cinema-seat-allocation
#define SOLUTION_CPP_FOLDER_NAME_ID_1387 	sort-integers-by-the-power-value
#define SOLUTION_CPP_FOLDER_NAME_ID_1388 	pizza-with-3n-slices
#define SOLUTION_CPP_FOLDER_NAME_ID_1374 	generate-a-string-with-characters-that-have-odd-counts
#define SOLUTION_CPP_FOLDER_NAME_ID_1375 	bulb-switcher-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_1376 	time-needed-to-inform-all-employees
#define SOLUTION_CPP_FOLDER_NAME_ID_1377 	frog-position-after-t-seconds
#define SOLUTION_CPP_FOLDER_NAME_ID_1380 	lucky-numbers-in-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1381 	design-a-stack-with-increment-operation
#define SOLUTION_CPP_FOLDER_NAME_ID_1383 	maximum-performance-of-a-team
#define SOLUTION_CPP_FOLDER_NAME_ID_1389 	create-target-array-in-the-given-order
#define SOLUTION_CPP_FOLDER_NAME_ID_1391 	check-if-there-is-a-valid-path-in-a-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1392 	longest-happy-prefix
#define SOLUTION_CPP_FOLDER_NAME_ID_1405 	longest-happy-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1399 	count-largest-group
#define SOLUTION_CPP_FOLDER_NAME_ID_1401 	circle-and-rectangle-overlapping
#define SOLUTION_CPP_FOLDER_NAME_ID_1400 	construct-k-palindrome-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_1402 	reducing-dishes
#define SOLUTION_CPP_FOLDER_NAME_ID_1394 	find-lucky-integer-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1395 	count-number-of-teams
#define SOLUTION_CPP_FOLDER_NAME_ID_1396 	design-underground-system
#define SOLUTION_CPP_FOLDER_NAME_ID_1397 	find-all-good-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_1413 	minimum-value-to-get-positive-step-by-step-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1414 	find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k
#define SOLUTION_CPP_FOLDER_NAME_ID_1415 	the-k-th-lexicographical-string-of-all-happy-strings-of-length-n
#define SOLUTION_CPP_FOLDER_NAME_ID_1416 	restore-the-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1403 	minimum-subsequence-in-non-increasing-order
#define SOLUTION_CPP_FOLDER_NAME_ID_1404 	number-of-steps-to-reduce-a-number-in-binary-representation-to-one
#define SOLUTION_CPP_FOLDER_NAME_ID_1406 	stone-game-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_1408 	string-matching-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1409 	queries-on-a-permutation-with-key
#define SOLUTION_CPP_FOLDER_NAME_ID_1410 	html-entity-parser
#define SOLUTION_CPP_FOLDER_NAME_ID_1411 	number-of-ways-to-paint-n-x-3-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1417 	reformat-the-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1418 	display-table-of-food-orders-in-a-restaurant
#define SOLUTION_CPP_FOLDER_NAME_ID_1419 	minimum-number-of-frogs-croaking
#define SOLUTION_CPP_FOLDER_NAME_ID_1420 	build-array-where-you-can-find-the-maximum-exactly-k-comparisons
#define SOLUTION_CPP_FOLDER_NAME_ID_1425 	constrained-subset-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1431 	kids-with-the-greatest-number-of-candies
#define SOLUTION_CPP_FOLDER_NAME_ID_1432 	max-difference-you-can-get-from-changing-an-integer
#define SOLUTION_CPP_FOLDER_NAME_ID_1433 	check-if-a-string-can-break-another-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1434 	number-of-ways-to-wear-different-hats-to-each-other
#define SOLUTION_CPP_FOLDER_NAME_ID_1422 	maximum-score-after-splitting-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1423 	maximum-points-you-can-obtain-from-cards
#define SOLUTION_CPP_FOLDER_NAME_ID_1424 	diagonal-traverse-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1446 	consecutive-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1447 	simplified-fractions
#define SOLUTION_CPP_FOLDER_NAME_ID_1448 	count-good-nodes-in-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1449 	form-largest-integer-with-digits-that-add-up-to-target
#define SOLUTION_CPP_FOLDER_NAME_ID_1436 	destination-city
#define SOLUTION_CPP_FOLDER_NAME_ID_1437 	check-if-all-1s-are-at-least-length-k-places-away
#define SOLUTION_CPP_FOLDER_NAME_ID_1438 	longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit
#define SOLUTION_CPP_FOLDER_NAME_ID_1439 	find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows
#define SOLUTION_CPP_FOLDER_NAME_ID_1441 	build-an-array-with-stack-operations
#define SOLUTION_CPP_FOLDER_NAME_ID_1442 	count-triplets-that-can-form-two-arrays-of-equal-xor
#define SOLUTION_CPP_FOLDER_NAME_ID_1443 	minimum-time-to-collect-all-apples-in-a-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1444 	number-of-ways-of-cutting-a-pizza
#define SOLUTION_CPP_FOLDER_NAME_ID_1450 	number-of-students-doing-homework-at-a-given-time
#define SOLUTION_CPP_FOLDER_NAME_ID_1451 	rearrange-words-in-a-sentence
#define SOLUTION_CPP_FOLDER_NAME_ID_1452 	people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list
#define SOLUTION_CPP_FOLDER_NAME_ID_1453 	maximum-number-of-darts-inside-of-a-circular-dartboard
#define SOLUTION_CPP_FOLDER_NAME_ID_1483 	kth-ancestor-of-a-tree-node
#define SOLUTION_CPP_FOLDER_NAME_ID_1460 	make-two-arrays-equal-by-reversing-sub-arrays
#define SOLUTION_CPP_FOLDER_NAME_ID_1461 	check-if-a-string-contains-all-binary-codes-of-size-k
#define SOLUTION_CPP_FOLDER_NAME_ID_1462 	course-schedule-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_1463 	cherry-pickup-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1455 	check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence
#define SOLUTION_CPP_FOLDER_NAME_ID_1456 	maximum-number-of-vowels-in-a-substring-of-given-length
#define SOLUTION_CPP_FOLDER_NAME_ID_1457 	pseudo-palindromic-paths-in-a-binary-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1458 	max-dot-product-of-two-subsequences
#define SOLUTION_CPP_FOLDER_NAME_ID_1475 	final-prices-with-a-special-discount-in-a-shop
#define SOLUTION_CPP_FOLDER_NAME_ID_1478 	allocate-mailboxes
#define SOLUTION_CPP_FOLDER_NAME_ID_1476 	avoid-flood-in-the-city
#define SOLUTION_CPP_FOLDER_NAME_ID_1477 	find-two-non-overlapping-sub-arrays-each-with-target-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1464 	maximum-product-of-two-elements-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1465 	maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts
#define SOLUTION_CPP_FOLDER_NAME_ID_1466 	reorder-routes-to-make-all-paths-lead-to-the-city-zero
#define SOLUTION_CPP_FOLDER_NAME_ID_1467 	probability-of-a-two-boxes-having-the-same-number-of-distinct-balls
#define SOLUTION_CPP_FOLDER_NAME_ID_1470 	shuffle-the-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1471 	the-k-strongest-values-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1472 	design-browser-history
#define SOLUTION_CPP_FOLDER_NAME_ID_1473 	paint-house-iii
#define SOLUTION_CPP_FOLDER_NAME_ID_1480 	running-sum-of-1d-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1481 	least-number-of-unique-integers-after-k-removals
#define SOLUTION_CPP_FOLDER_NAME_ID_1482 	minimum-number-of-days-to-make-m-bouquets
#define SOLUTION_CPP_FOLDER_NAME_ID_1486 	xor-operation-in-an-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1487 	making-file-names-unique
#define SOLUTION_CPP_FOLDER_NAME_ID_1488 	avoid-flood-in-the-city
#define SOLUTION_CPP_FOLDER_NAME_ID_1489 	find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1491 	average-salary-excluding-the-minimum-and-maximum-salary
#define SOLUTION_CPP_FOLDER_NAME_ID_1492 	the-kth-factor-of-n
#define SOLUTION_CPP_FOLDER_NAME_ID_1493 	longest-subarray-of-1s-after-deleting-one-element
#define SOLUTION_CPP_FOLDER_NAME_ID_1494 	parallel-courses-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1496 	path-crossing
#define SOLUTION_CPP_FOLDER_NAME_ID_1497 	check-if-array-pairs-are-divisible-by-k
#define SOLUTION_CPP_FOLDER_NAME_ID_1498 	number-of-subsequences-that-satisfy-the-given-sum-condition
#define SOLUTION_CPP_FOLDER_NAME_ID_1499 	max-value-of-equation
#define SOLUTION_CPP_FOLDER_NAME_ID_1502 	can-make-arithmetic-progression-from-sequence
#define SOLUTION_CPP_FOLDER_NAME_ID_1503 	last-moment-before-all-ants-fall-out-of-a-plank
#define SOLUTION_CPP_FOLDER_NAME_ID_1504 	count-submatrices-with-all-ones
#define SOLUTION_CPP_FOLDER_NAME_ID_1505 	minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits
#define SOLUTION_CPP_FOLDER_NAME_ID_1507 	reformat-date
#define SOLUTION_CPP_FOLDER_NAME_ID_1508 	range-sum-of-sorted-subarray-sums
#define SOLUTION_CPP_FOLDER_NAME_ID_1509 	minimum-difference-between-largest-and-smallest-value-in-three-moves
#define SOLUTION_CPP_FOLDER_NAME_ID_1510 	stone-game-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_1512 	number-of-good-pairs
#define SOLUTION_CPP_FOLDER_NAME_ID_1513 	number-of-substrings-with-only-1s
#define SOLUTION_CPP_FOLDER_NAME_ID_1514 	path-with-maximum-probability
#define SOLUTION_CPP_FOLDER_NAME_ID_1515 	best-position-for-a-service-centre
#define SOLUTION_CPP_FOLDER_NAME_ID_1518 	water-bottles
#define SOLUTION_CPP_FOLDER_NAME_ID_1519 	number-of-nodes-in-the-sub-tree-with-the-same-label
#define SOLUTION_CPP_FOLDER_NAME_ID_1520 	maximum-number-of-non-overlapping-substrings
#define SOLUTION_CPP_FOLDER_NAME_ID_1521 	find-a-value-of-a-mysterious-function-closest-to-target
#define SOLUTION_CPP_FOLDER_NAME_ID_1523 	count-odd-numbers-in-an-interval-range
#define SOLUTION_CPP_FOLDER_NAME_ID_1524 	number-of-sub-arrays-with-odd-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1525 	number-of-good-ways-to-split-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1526 	minimum-number-of-increments-on-subarrays-to-form-a-target-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1528 	shuffle-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1529 	bulb-switcher-iv
#define SOLUTION_CPP_FOLDER_NAME_ID_1530 	number-of-good-leaf-nodes-pairs
#define SOLUTION_CPP_FOLDER_NAME_ID_1531 	string-compression-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_1534 	count-good-triplets
#define SOLUTION_CPP_FOLDER_NAME_ID_1535 	find-the-winner-of-an-array-game
#define SOLUTION_CPP_FOLDER_NAME_ID_1536 	minimum-swaps-to-arrange-a-binary-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1537 	get-the-maximum-score
#define SOLUTION_CPP_FOLDER_NAME_ID_1539 	kth-missing-positive-number
#define SOLUTION_CPP_FOLDER_NAME_ID_1540 	can-convert-string-in-k-moves
#define SOLUTION_CPP_FOLDER_NAME_ID_1541 	minimum-insertions-to-balance-a-parentheses-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1546 	maximum-number-of-non-overlapping-subarrays-with-sum-equals-target
#define SOLUTION_CPP_FOLDER_NAME_ID_1544 	make-the-string-great
#define SOLUTION_CPP_FOLDER_NAME_ID_1545 	find-kth-bit-in-nth-binary-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1542 	find-longest-awesome-substring
#define SOLUTION_CPP_FOLDER_NAME_ID_1547 	minimum-cost-to-cut-a-stick
#define SOLUTION_CPP_FOLDER_NAME_ID_1572 	matrix-diagonal-sum
#define SOLUTION_CPP_FOLDER_NAME_ID_1573 	number-of-ways-to-split-a-string
#define SOLUTION_CPP_FOLDER_NAME_ID_1574 	shortest-subarray-to-be-removed-to-make-array-sorted
#define SOLUTION_CPP_FOLDER_NAME_ID_1575 	count-all-possible-routes
#define SOLUTION_CPP_FOLDER_NAME_ID_1576 	replace-all-s-to-avoid-consecutive-repeating-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1577 	number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_1578 	minimum-deletion-cost-to-avoid-repeating-letters
#define SOLUTION_CPP_FOLDER_NAME_ID_1579 	remove-max-number-of-edges-to-keep-graph-fully-traversable
#define SOLUTION_CPP_FOLDER_NAME_ID_1550 	three-consecutive-odds
#define SOLUTION_CPP_FOLDER_NAME_ID_1556 	thousand-separator
#define SOLUTION_CPP_FOLDER_NAME_ID_1557 	minimum-number-of-vertices-to-reach-all-nodes
#define SOLUTION_CPP_FOLDER_NAME_ID_1558 	minimum-numbers-of-function-calls-to-make-target-array
#define SOLUTION_CPP_FOLDER_NAME_ID_1559 	detect-cycles-in-2d-grid
#define SOLUTION_CPP_FOLDER_NAME_ID_1551 	minimum-operations-to-make-array-equal
#define SOLUTION_CPP_FOLDER_NAME_ID_1552 	magnetic-force-between-two-balls
#define SOLUTION_CPP_FOLDER_NAME_ID_1553 	minimum-number-of-days-to-eat-n-oranges
#define SOLUTION_CPP_FOLDER_NAME_ID_1560 	most-visited-sector-in-a-circular-track
#define SOLUTION_CPP_FOLDER_NAME_ID_1561 	maximum-number-of-coins-you-can-get
#define SOLUTION_CPP_FOLDER_NAME_ID_1562 	find-latest-group-of-size-m
#define SOLUTION_CPP_FOLDER_NAME_ID_1563 	stone-game-v
#define SOLUTION_CPP_FOLDER_NAME_ID_1566 	detect-pattern-of-length-m-repeated-k-or-more-times
#define SOLUTION_CPP_FOLDER_NAME_ID_1567 	maximum-length-of-subarray-with-positive-product
#define SOLUTION_CPP_FOLDER_NAME_ID_1568 	minimum-number-of-days-to-disconnect-island
#define SOLUTION_CPP_FOLDER_NAME_ID_1569 	number-of-ways-to-reorder-array-to-get-same-bst
#define SOLUTION_CPP_FOLDER_NAME_ID_1582 	special-positions-in-a-binary-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_1583 	count-unhappy-friends
#define SOLUTION_CPP_FOLDER_NAME_ID_1584 	min-cost-to-connect-all-points
#define SOLUTION_CPP_FOLDER_NAME_ID_1585 	check-if-string-is-transformable-with-substring-sort-operations
#define SOLUTION_CPP_FOLDER_NAME_ID_1603 	design-parking-system
#define SOLUTION_CPP_FOLDER_NAME_ID_1604 	alert-using-same-key-card-three-or-more-times-in-a-one-hour-period
#define SOLUTION_CPP_FOLDER_NAME_ID_1605 	find-valid-matrix-given-row-and-column-sums
#define SOLUTION_CPP_FOLDER_NAME_ID_1606 	find-servers-that-handled-most-number-of-requests
#define SOLUTION_CPP_FOLDER_NAME_ID_1608 	special-array-with-x-elements-greater-than-or-equal-x
#define SOLUTION_CPP_FOLDER_NAME_ID_1609 	even-odd-tree
#define SOLUTION_CPP_FOLDER_NAME_ID_1610 	maximum-number-of-visible-points
#define SOLUTION_CPP_FOLDER_NAME_ID_1611 	minimum-one-bit-operations-to-make-integers-zero
#define SOLUTION_CPP_FOLDER_NAME_ID_1616 	split-two-strings-to-make-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_1624 	largest-substring-between-two-equal-characters
#define SOLUTION_CPP_FOLDER_NAME_ID_1625 	lexicographically-smallest-string-after-applying-operations
#define SOLUTION_CPP_FOLDER_NAME_ID_1626 	best-team-with-no-conflicts
#define SOLUTION_CPP_FOLDER_NAME_ID_1627 	graph-connectivity-with-threshold
#define SOLUTION_CPP_FOLDER_NAME_ID_5122 	mean-of-array-after-removing-some-elements
#define SOLUTION_CPP_FOLDER_NAME_ID_5156 	rank-transform-of-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_5503 	sum-of-all-odd-length-subarrays
#define SOLUTION_CPP_FOLDER_NAME_ID_5504 	make-sum-divisible-by-p
#define SOLUTION_CPP_FOLDER_NAME_ID_5505 	maximum-sum-obtained-of-any-permutation
#define SOLUTION_CPP_FOLDER_NAME_ID_5506 	strange-printer-ii
#define SOLUTION_CPP_FOLDER_NAME_ID_5519 	rearrange-spaces-between-words
#define SOLUTION_CPP_FOLDER_NAME_ID_5520 	split-a-string-into-the-max-number-of-unique-substrings
#define SOLUTION_CPP_FOLDER_NAME_ID_5521 	maximum-non-negative-product-in-a-matrix
#define SOLUTION_CPP_FOLDER_NAME_ID_5522 	minimum-cost-to-connect-two-groups-of-points
#define SOLUTION_CPP_FOLDER_NAME_ID_5523 	crawler-log-folder
#define SOLUTION_CPP_FOLDER_NAME_ID_5524 	maximum-profit-of-operating-a-centennial-wheel
#define SOLUTION_CPP_FOLDER_NAME_ID_5525 	throne-inheritance
#define SOLUTION_CPP_FOLDER_NAME_ID_5526 	maximum-number-of-achievable-transfer-requests
#define SOLUTION_CPP_FOLDER_NAME_ID_5527 	number-of-sets-of-k-non-overlapping-line-segments
#define SOLUTION_CPP_FOLDER_NAME_ID_5528 	coordinate-with-maximum-network-quality
#define SOLUTION_CPP_FOLDER_NAME_ID_5530 	fancy-sequence
#define SOLUTION_CPP_FOLDER_NAME_ID_5535 	maximum-nesting-depth-of-the-parentheses
#define SOLUTION_CPP_FOLDER_NAME_ID_5536 	maximal-network-rank
#define SOLUTION_CPP_FOLDER_NAME_ID_5537 	split-two-strings-to-make-palindrome
#define SOLUTION_CPP_FOLDER_NAME_ID_5538 	count-subtrees-with-max-distance-between-cities
#define SOLUTION_CPP_FOLDER_NAME_ID_5539 	sort-array-by-increasing-frequency
#define SOLUTION_CPP_FOLDER_NAME_ID_5540 	widest-vertical-area-between-two-points-containing-no-points
#define SOLUTION_CPP_FOLDER_NAME_ID_5541 	count-substrings-that-differ-by-one-character
#define SOLUTION_CPP_FOLDER_NAME_ID_5542 	number-of-ways-to-form-a-target-string-given-a-dictionary
#define SOLUTION_CPP_FOLDER_NAME_ID_5546 	slowest-key
#define SOLUTION_CPP_FOLDER_NAME_ID_5547 	arithmetic-subarrays
#define SOLUTION_CPP_FOLDER_NAME_ID_5548 	path-with-minimum-effort
#define SOLUTION_CPP_FOLDER_NAME_ID_5550 	defuse-the-bomb
#define SOLUTION_CPP_FOLDER_NAME_ID_5551 	minimum-deletions-to-make-string-balanced
#define SOLUTION_CPP_FOLDER_NAME_ID_5552 	minimum-jumps-to-reach-home
#define SOLUTION_CPP_FOLDER_NAME_ID_5553 	distribute-repeating-integers
#define SOLUTION_CPP_FOLDER_NAME_ID_5554 	check-array-formation-through-concatenation
#define SOLUTION_CPP_FOLDER_NAME_ID_5555 	count-sorted-vowel-strings
#define SOLUTION_CPP_FOLDER_NAME_ID_5556 	furthest-building-you-can-reach
#define SOLUTION_CPP_FOLDER_NAME_ID_5561 	get-maximum-in-generated-array
#define SOLUTION_CPP_FOLDER_NAME_ID_5562 	minimum-deletions-to-make-character-frequencies-unique
#define SOLUTION_CPP_FOLDER_NAME_ID_5563 	sell-diminishing-valued-colored-balls
#define SOLUTION_CPP_FOLDER_NAME_ID_5564 	create-sorted-array-through-instructions
#define SOLUTION_CPP_FOLDER_NAME_ID_5600 	kth-smallest-instructions
#define SOLUTION_CPP_FOLDER_NAME_ID_100263 	happy-new-year-2020-bomb
#define SOLUTION_CPP_FOLDER_NAME_ID_100264 	how-many-apples-lc
#define SOLUTION_CPP_FOLDER_NAME_ID_100265 	qqqqqqqqqqqqqqqys-warm-up-question
#define SOLUTION_CPP_FOLDER_NAME_ID_100266 	one-day-of-otaku
#define SOLUTION_CPP_FOLDER_NAME_ID_100267 	collect-beads
#define SOLUTION_CPP_FOLDER_NAME_ID_100269 	werewolves-of-leetcode
#define SOLUTION_CPP_FOLDER_NAME_ID_100272 	happy-new-year-lol
#define SOLUTION_CPP_FOLDER_NAME_ID_1000002 	find-hidden-info-UGC
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_01 	guess-numbers
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_02 	deep-dark-fraction
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_03 	programmable-robot
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_04 	broken-board-dominoes
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_05 	coin-bonus
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_06 	na-ying-bi
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_07 	chuan-di-xin-xi
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_08 	ju-qing-hong-fa-shi-jian
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_09 	zui-xiao-tiao-yue-ci-shu
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_10 	er-cha-shu-ren-wu-diao-du
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_11 	qi-wang-ge-shu-tong-ji
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_12 	xiao-zhang-shua-ti-ji-hua
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_13 	xun-bao
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_14 	qie-fen-shu-zu
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_15 	you-le-yuan-de-mi-gong
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_16 	you-le-yuan-de-you-lan-ji-hua
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_17 	nGK0Fy
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_18 	2vYnGI
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_19 	UlBDOe
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_20 	meChtZ
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_21 	Za25hA
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_22 	ccw6C7
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_23 	er94lq
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_24 	5TxKeK
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_25 	Uh984O
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_26 	hSRGyL
#define SOLUTION_CPP_FOLDER_NAME_ID_LCP_27 	IQvJ9i
